// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Claimed extends ethereum.Event {
  get params(): Claimed__Params {
    return new Claimed__Params(this);
  }
}

export class Claimed__Params {
  _event: Claimed;

  constructor(event: Claimed) {
    this._event = event;
  }

  get value(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class DataSupplier extends ethereum.SmartContract {
  static bind(address: Address): DataSupplier {
    return new DataSupplier("DataSupplier", address);
  }

  getEarnings(supplier: Address): BigInt {
    let result = super.call("getEarnings", "getEarnings(address):(uint256)", [
      ethereum.Value.fromAddress(supplier)
    ]);

    return result[0].toBigInt();
  }

  try_getEarnings(supplier: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEarnings",
      "getEarnings(address):(uint256)",
      [ethereum.Value.fromAddress(supplier)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTotalSupplySize(): BigInt {
    let result = super.call(
      "getTotalSupplySize",
      "getTotalSupplySize():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getTotalSupplySize(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalSupplySize",
      "getTotalSupplySize():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isSupplied(tokenContract: Address, tokenId: BigInt): boolean {
    let result = super.call(
      "isSupplied",
      "isSupplied(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(tokenContract),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );

    return result[0].toBoolean();
  }

  try_isSupplied(
    tokenContract: Address,
    tokenId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isSupplied",
      "isSupplied(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(tokenContract),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSupplier(supplier: Address): boolean {
    let result = super.call("isSupplier", "isSupplier(address):(bool)", [
      ethereum.Value.fromAddress(supplier)
    ]);

    return result[0].toBoolean();
  }

  try_isSupplier(supplier: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isSupplier", "isSupplier(address):(bool)", [
      ethereum.Value.fromAddress(supplier)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ClaimEarningsCall extends ethereum.Call {
  get inputs(): ClaimEarningsCall__Inputs {
    return new ClaimEarningsCall__Inputs(this);
  }

  get outputs(): ClaimEarningsCall__Outputs {
    return new ClaimEarningsCall__Outputs(this);
  }
}

export class ClaimEarningsCall__Inputs {
  _call: ClaimEarningsCall;

  constructor(call: ClaimEarningsCall) {
    this._call = call;
  }
}

export class ClaimEarningsCall__Outputs {
  _call: ClaimEarningsCall;

  constructor(call: ClaimEarningsCall) {
    this._call = call;
  }
}

export class MakeSupplyCall extends ethereum.Call {
  get inputs(): MakeSupplyCall__Inputs {
    return new MakeSupplyCall__Inputs(this);
  }

  get outputs(): MakeSupplyCall__Outputs {
    return new MakeSupplyCall__Outputs(this);
  }
}

export class MakeSupplyCall__Inputs {
  _call: MakeSupplyCall;

  constructor(call: MakeSupplyCall) {
    this._call = call;
  }

  get tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MakeSupplyCall__Outputs {
  _call: MakeSupplyCall;

  constructor(call: MakeSupplyCall) {
    this._call = call;
  }
}

export class PurchaseDataCall extends ethereum.Call {
  get inputs(): PurchaseDataCall__Inputs {
    return new PurchaseDataCall__Inputs(this);
  }

  get outputs(): PurchaseDataCall__Outputs {
    return new PurchaseDataCall__Outputs(this);
  }
}

export class PurchaseDataCall__Inputs {
  _call: PurchaseDataCall;

  constructor(call: PurchaseDataCall) {
    this._call = call;
  }
}

export class PurchaseDataCall__Outputs {
  _call: PurchaseDataCall;

  constructor(call: PurchaseDataCall) {
    this._call = call;
  }
}

export class RevokeSupplyCall extends ethereum.Call {
  get inputs(): RevokeSupplyCall__Inputs {
    return new RevokeSupplyCall__Inputs(this);
  }

  get outputs(): RevokeSupplyCall__Outputs {
    return new RevokeSupplyCall__Outputs(this);
  }
}

export class RevokeSupplyCall__Inputs {
  _call: RevokeSupplyCall;

  constructor(call: RevokeSupplyCall) {
    this._call = call;
  }

  get tokenContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RevokeSupplyCall__Outputs {
  _call: RevokeSupplyCall;

  constructor(call: RevokeSupplyCall) {
    this._call = call;
  }
}
